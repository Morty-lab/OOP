import math

class triangle():
    def __init__(self,x1,x2,x3,y1,y2,y3):
        self.__x1 = x1
        self.__x2 = x2       
        self.__x3 = x3
        self.__y1 = y1
        self.__y2 = y2
        self.__y3 = y3

    def get_x1(self):
        return self.__x1

    def get_x2(self):
        return self.__x2
    
    def get_x3(self):
        return self.__x3
    
    def get_y1(self):
        return self.__y1

    def get_y2(self):
        return self.__y2

    def get_y3(self):
        return self.__y3

    def set_x1(self,x):
        self.__x1 = x
    

    def set_x2(self,x):
        self.__x2 = x
       

    def set_x3(self,x):
        self.__x3 = x
       

    def set_y1(self,y):
        self.__y1 = y
        

    def set_y2(self,y):
        self.__y2 = y
       

    def set_y3(self,y):
        self.__y3 = y
        

    def get_side1(self):
         s1 = ((self.__x2-self.__x1)**2) +((self.__y2-self.__y1)**2)
         s1 = math.sqrt(s1)
         return s1
          
    def get_side2(self):
         s2 =((self.__x3-self.__x2)**2)+((self.__y3-self.__y2)**2)
         s2 = math.sqrt(s2)
         return s2
         
    def get_side3(self):
         s3 = ((self.__x1-self.__x3)**2)+((self.__y1-self.__y3)**2)
         s3 = math.sqrt(s3)
         return s3

    def calc_perimeter(self):
        p = self.get_side1() + self.get_side2()+ self.get_side3()
        return round(p,3)

    def calc_area(self):
        p = self.calc_perimeter()/2
        a = p*(p-self.get_side1())*(p-self.get_side2())*(p-self.get_side3())
        a = math.sqrt(a)
        return a

    def __str__(self):
        return "Triangle ("+str(self.__x1)+"," + str(self.__y1)+"), (" + str(self.__x2)+ ',' + str(self.__y2)+"),("+str(self.__x3) + "," +str(self.__y3) +")"+"\n"+"side 1: "+ str(self.get_side1())+"\n"+"side 2: "+str(self.get_side2())+"\n"+"side 3: "+str(self.get_side3()) + "\n" +"perimeter:  "+ str(self.calc_perimeter())+"\n"+ "area: " + str(self.calc_area())
    
tri1 = triangle(3,5,6,2,4,3)

print(triangle.get_x1(tri1))
triangle.set_x1(tri1,4)
print(triangle.get_x1(tri1))
print(tri1)

